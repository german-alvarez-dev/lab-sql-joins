use sakila;
-- List the number of films per category.

SELECT category.name, count(film.film_id) AS movies_quantity from category 
JOIN film_category 
ON category.category_id = film_category.category_id
JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name;


-- Retrieve the store ID, city, and country for each store.
SELECT 
	store.store_id, 
    country.country,
    city.city from store
    JOIN address
    ON store.address_id = address.address_id
    JOIN city
    ON address.city_id =  city.city_id
    JOIN country
    ON city.country_id = country.country_id;


-- Calculate the total revenue generated by each store in dollars.
SELECT 
	store.store_id, SUM(payment.amount) AS total_revenue from payment
    JOIN staff ON payment.staff_id = staff.staff_id
    JOIN store on staff.store_id = store.store_id 
    GROUP BY store.store_id;


-- Determine the average running time of films for each category.
SELECT 
	category.name, AVG(length) AS average_length from film
    JOIN film_category ON film_category.film_id = film.film_id
    JOIN category ON film_category.category_id = category.category_id
    GROUP BY category.name;
    

-- Identify the film categories with the longest average running time.
SELECT 
	category.name, AVG(length) AS average_length from film
    JOIN film_category ON film_category.film_id = film.film_id
    JOIN category ON film_category.category_id = category.category_id
    GROUP BY category.name
    ORDER BY average_length DESC
    LIMIT 5;
    
    
-- Display the top 10 most frequently rented movies in descending order.
SELECT 
    film.title, COUNT(rental.rental_id) AS rental_count from rental
    JOIN inventory ON rental.inventory_id = inventory.inventory_id
    JOIN film ON inventory.film_id = film.film_id
    GROUP BY film.title
    ORDER BY rental_count DESC
    LIMIT 10;


